{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\\\u043A\\u043E\\u0434\\\\sanat-project-eng\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../App.css';\nimport Header from '../components/Header';\nimport sectionData from '../assets/sectionData';\nimport Sections from '../components/Sections';\nimport Cards from '../components/Cards';\nimport data from '../assets/data';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  const [currentIndex, setCurrentIndex] = useState(0);\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      setCurrentIndex((currentIndex + 1) % data.length);\n    }, 5000);\n    return () => clearInterval(intervalId);\n  }, [currentIndex, data.length]);\n  function handleNext() {\n    setCurrentIndex((currentIndex + 1) % data.length);\n  }\n  function handlePrev() {\n    setCurrentIndex((currentIndex - 1 + data.length) % data.length);\n  }\n  const cards = sectionData.map(item => /*#__PURE__*/_jsxDEV(Cards, {\n    image: item.image,\n    title: item.title,\n    link: item.link\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this));\n  const [startX, setStartX] = useState(0);\n  const [endX, setEndX] = useState(0);\n  const handleTouchStart = e => {\n    setStartX(e.touches[0].clientX);\n  };\n  const handleTouchEnd = e => {\n    setEndX(e.changedTouches[0].clientX);\n    if (startX > endX) {\n      handleNext();\n    } else {\n      handlePrev();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      image: data[currentIndex].image,\n      title: data[currentIndex].title,\n      subtitle: data[currentIndex].subtitle,\n      isWhite: data[currentIndex].isWhite,\n      link: data[currentIndex].link,\n      id: data[currentIndex].id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: handlePrev,\n      className: \"handle__button handle__button_prev\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: handleNext,\n      className: \"handle__button handle__button_next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Sections, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sections__cards\",\n      onTouchStart: handleTouchStart,\n      onTouchEnd: handleTouchEnd,\n      children: cards\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Home, \"SqCBcW53G/rlbFxLja9WZiVLa94=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","Header","sectionData","Sections","Cards","data","Home","currentIndex","setCurrentIndex","intervalId","setInterval","length","clearInterval","handleNext","handlePrev","cards","map","item","image","title","link","startX","setStartX","endX","setEndX","handleTouchStart","e","touches","clientX","handleTouchEnd","changedTouches","subtitle","isWhite","id"],"sources":["C:/Users/user/OneDrive/Рабочий стол/код/sanat-project-eng/src/pages/Home.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport '../App.css';\nimport Header from '../components/Header';\nimport sectionData from '../assets/sectionData';\nimport Sections from '../components/Sections';\nimport Cards from '../components/Cards';\nimport data from '../assets/data';\n\nfunction Home() {\n  const [currentIndex, setCurrentIndex] = useState(0);\n\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      setCurrentIndex((currentIndex + 1) % data.length);\n    }, 5000);\n    return () => clearInterval(intervalId);\n  }, [currentIndex, data.length]);\n\n  function handleNext() {\n    setCurrentIndex((currentIndex + 1) % data.length);\n  }\n\n  function handlePrev() {\n    setCurrentIndex((currentIndex - 1 + data.length) % data.length);\n  }\n\n  const cards = sectionData.map((item) => (\n    <Cards image={item.image} title={item.title} link={item.link} />\n  ));\n\n  const [startX, setStartX] = useState(0);\n  const [endX, setEndX] = useState(0);\n\n  const handleTouchStart = (e) => {\n    setStartX(e.touches[0].clientX);\n  };\n\n  const handleTouchEnd = (e) => {\n    setEndX(e.changedTouches[0].clientX);\n    if (startX > endX) {\n      handleNext();\n    } else {\n      handlePrev();\n    }\n  };\n\n  return (\n    <>\n      <Header\n        image={data[currentIndex].image}\n        title={data[currentIndex].title}\n        subtitle={data[currentIndex].subtitle}\n        isWhite={data[currentIndex].isWhite}\n        link={data[currentIndex].link}\n        id={data[currentIndex].id}\n      />\n      <div\n        onClick={handlePrev}\n        className=\"handle__button handle__button_prev\"\n      ></div>\n      <div\n        onClick={handleNext}\n        className=\"handle__button handle__button_next\"\n      ></div>\n      <Sections />\n      <div\n        className=\"sections__cards\"\n        onTouchStart={handleTouchStart}\n        onTouchEnd={handleTouchEnd}\n      >\n        {cards}\n      </div>\n    </>\n  );\n}\n\nexport default Home;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}