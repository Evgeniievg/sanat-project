{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\\\u043A\\u043E\\u0434\\\\sanat-project-eng\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../App.css';\nimport Header from '../components/Header';\nimport sectionData from '../assets/sectionData';\nimport Sections from '../components/Sections';\nimport Cards from '../components/Cards';\nimport data from '../assets/data';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  const [currentIndex, setCurrentIndex] = useState(0);\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      setCurrentIndex((currentIndex + 1) % data.length);\n    }, 5000);\n    return () => clearInterval(intervalId);\n  }, [currentIndex, data.length]);\n  function handleNext() {\n    setCurrentIndex((currentIndex + 1) % data.length);\n  }\n  function handlePrev() {\n    setCurrentIndex((currentIndex - 1 + data.length) % data.length);\n  }\n  function handleSwipe(event) {\n    const xDiff = event.touches[0].clientX - startX;\n    if (xDiff > 0) {\n      handlePrev();\n    } else {\n      handleNext();\n    }\n  }\n  let startX;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      image: data[currentIndex].image,\n      title: data[currentIndex].title,\n      subtitle: data[currentIndex].subtitle,\n      isWhite: data[currentIndex].isWhite,\n      link: data[currentIndex].link,\n      id: data[currentIndex].id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: handlePrev,\n      onTouchStart: event => {\n        startX = event.touches[0].clientX;\n      },\n      onTouchMove: handleSwipe,\n      className: \"handle__button handle__button_prev\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: handleNext,\n      onTouchStart: event => {\n        startX = event.touches[0].clientX;\n      },\n      onTouchMove: handleSwipe,\n      className: \"handle__button handle__button_next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Sections, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sections__cards\",\n      children: sectionData.map(item => /*#__PURE__*/_jsxDEV(Cards, {\n        image: item.image,\n        title: item.title,\n        link: item.link\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Home, \"tPjzCc9H5UuFdWNuAHYoD0K4UOk=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","Header","sectionData","Sections","Cards","data","Home","currentIndex","setCurrentIndex","intervalId","setInterval","length","clearInterval","handleNext","handlePrev","handleSwipe","event","xDiff","touches","clientX","startX","image","title","subtitle","isWhite","link","id","map","item"],"sources":["C:/Users/user/OneDrive/Рабочий стол/код/sanat-project-eng/src/pages/Home.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport '../App.css';\nimport Header from '../components/Header';\nimport sectionData from '../assets/sectionData';\nimport Sections from '../components/Sections';\nimport Cards from '../components/Cards';\nimport data from '../assets/data';\n\nfunction Home() {\n  const [currentIndex, setCurrentIndex] = useState(0);\n\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      setCurrentIndex((currentIndex + 1) % data.length);\n    }, 5000);\n    return () => clearInterval(intervalId);\n  }, [currentIndex, data.length]);\n\n  function handleNext() {\n    setCurrentIndex((currentIndex + 1) % data.length);\n  }\n\n  function handlePrev() {\n    setCurrentIndex((currentIndex - 1 + data.length) % data.length);\n  }\n\n  function handleSwipe(event) {\n    const xDiff = event.touches[0].clientX - startX;\n    if (xDiff > 0) {\n      handlePrev();\n    } else {\n      handleNext();\n    }\n  }\n\n  let startX;\n\n  return (\n    <>\n      <Header\n        image={data[currentIndex].image}\n        title={data[currentIndex].title}\n        subtitle={data[currentIndex].subtitle}\n        isWhite={data[currentIndex].isWhite}\n        link={data[currentIndex].link}\n        id={data[currentIndex].id}\n      />\n      <div\n        onClick={handlePrev}\n        onTouchStart={(event) => {\n          startX = event.touches[0].clientX;\n        }}\n        onTouchMove={handleSwipe}\n        className=\"handle__button handle__button_prev\"\n      ></div>\n      <div\n        onClick={handleNext}\n        onTouchStart={(event) => {\n          startX = event.touches[0].clientX;\n        }}\n        onTouchMove={handleSwipe}\n        className=\"handle__button handle__button_next\"\n      ></div>\n      <Sections />\n      <div className=\"sections__cards\">\n        {sectionData.map((item) => (\n          <Cards\n            image={item.image}\n            title={item.title}\n            link={item.link}\n          />\n        ))}\n      </div>\n    </>\n  );\n}\n\nexport default Home;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}